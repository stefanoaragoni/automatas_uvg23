(* Lexer para Gramática No. 4 *)

(* Introducir cualquier header aqui *)

let delim = [' ''\t''\n']
let ws = delim+
let letter = ['A'-'Z''a'-'z']
let str = (_)*
let digit = ['0'-'9']
let digits = digit+
let id = letter(letter|str|digit)*
let number = digits(.digits)?('E'['+''-']?digits)?

rule tokens = 
    ws        { result_token = "WHITESPACE"}
  | id        { result_token = "ID" }               (* Cambie por una acción válida, que devuelva el token *)
  | number    { result_token = "NUMBER" }
  | ';'       { result_token = "SEMICOLON" }
  | ":="      { result_token = "ASSIGNOP" }
  | '<'       { result_token = "LT" }
  | '='       { result_token = "EQ" }
  | '+'       { result_token = "PLUS" }
  | '-'       { result_token = "MINUS" }
  | '*'       { result_token = "TIMES" }
  | '/'       { result_token = "DIV" }
  | '('       { result_token = "LPAREN" }
  | ')'       { result_token = "RPAREN" }

(* Introducir cualquier trailer aqui *)